version: '3'
services:
    frontend-nodejs:
        build:
            context: .
            dockerfile: ./frontend/docker/development/frontend-nodejs.docker
        volumes:
            - './frontend:/app'
#            - '/app/node_modules'
        ports:
            - '3001:3000'
        environment:
            - NODE_ENV=development
    api-nginx:
        build:
            context: ./api/docker/development
            dockerfile: nginx.docker
        volumes:
            - ./api:/var/www/api
        depends_on:
            - api-php-fpm
        ports:
            - "8081:80"
    api-php-fpm:
        build:
            context: ./api/docker/development
            dockerfile: php-fpm.docker
        volumes:
            - ./api:/var/www/api
            - ./storage:/var/www/storage
        depends_on:
            - api-postgres
            - mailer
    api-php-cli:
        build:
            context: ./api/docker/development
            dockerfile: php-cli.docker
        volumes:
            - ./api:/var/www/api
            - composer:/root/.composer/cache
            - ./storage:/var/www/storage
        depends_on:
            - api-postgres
            - mailer
        tty: true
    api-postgres:
        image: postgres:11.2-alpine
        volumes:
            - api-postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: app
        ports:
            - "54321:5432"

    mailer:
        image: mailhog/mailhog
#        restart: unless-stopped
        ports:
            - "1025:1025"
            - "8082:8025"

    storage-nginx:
        build:
            context: ./storage/docker
            dockerfile: nginx.docker
        volumes:
            - ./storage:/var/www/storage
        ports:
            - "8083:80"

volumes:
    api-postgres:
    composer: